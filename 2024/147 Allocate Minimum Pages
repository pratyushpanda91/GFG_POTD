class Solution {
  public:
    bool isPossible(vector<int>& arr, int k, int mid) {
        int students = 1, pagesSum = 0;

        for (int i = 0; i < arr.size(); i++) {
            if (arr[i] > mid)
                return false;

            if (pagesSum + arr[i] > mid) {
                students++;
                pagesSum = arr[i];
                if (students > k)
                    return false;
            } else {
                pagesSum += arr[i];
            }
        }
        return true;
    }

    int findPages(vector<int> &arr, int k) {
        if (k > arr.size())
            return -1;

        int low = *max_element(arr.begin(), arr.end());
        int high = accumulate(arr.begin(), arr.end(), 0);
        int result = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (isPossible(arr, k, mid)) {
                result = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return result;
    }
};
